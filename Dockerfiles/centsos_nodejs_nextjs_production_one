# Start with a CentOS-based image
FROM centos:7

# Add EPEL repository for additional packages
RUN yum install -y epel-release

# Install Node.js 18
RUN curl -sL https://rpm.nodesource.com/setup_18.x | bash - && \
    yum install -y nodejs

# Install required packages for Puppeteer and other libraries
RUN yum install -y \
    gconf-service \
    libasound2 \
    libatk1.0-0 \
    libcairo \
    libcups2 \
    libdbus-1-3 \
    libexpat1 \
    libfontconfig1 \
    libgcc1 \
    libgconf-2-4 \
    libgdk-pixbuf2.0-0 \
    libglib2.0-0 \
    libgtk-3-0 \
    libnspr4 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11 \
    libx11-xcb \
    libxcb \
    libxcomposite \
    libxcursor \
    libxdamage \
    libxext \
    libxfixes \
    libxi \
    libxrandr \
    libxrender \
    libxss \
    libxtst \
    ca-certificates \
    fonts-liberation \
    libappindicator1 \
    libnss3-dev

# Set the working directory
WORKDIR /app

# Copy package files and install dependencies
COPY package.json package-lock.json ./
RUN npm ci  # Using npm ci ensures exact installation and avoids updating dependencies

# Copy the rest of the application code
COPY . .

# Build the Next.js project for production
RUN npm run build  # Build the project in production mode

# Expose the production port
EXPOSE 3000

# Set environment variables for production mode
ENV NODE_ENV=production

# Command to start the Next.js server in production mode
CMD ["npm", "start"]



docker build -t nextjs-prod .



docker run -p 8080:3000 nextjs-prod
